//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int row[4] = {-1,0,1,0};
    int col[4] = {0,1,0,-1};
    bool isokay(int i,int j , int n , int m ){
        if(i>=0 and j>=0 and i<n and j < m){
            return true;
        }
        return false;
    }
    void dfs(int i,int j,vector<vector<char>> & mat,vector<vector<int>> & vis){
        vis[i][j]=1;
        int n = mat.size(),m = mat[0].size();
        for(int k=0;k<4;k++){
            int nrow = i+row[k];
            int ncol = j+col[k];
            if(isokay(nrow,ncol,n,m) and mat[nrow][ncol]=='O' and !vis[nrow][ncol] ){
                dfs(nrow,ncol,mat,vis);
            }
        }
    }
    vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)
    {
        // code here
        vector<vector<int>> vis(n,vector<int> (m,0));
        for(int i=0;i<n ;i++){
            if(mat[i][0]=='O' and !vis[i][0]){
                dfs(i,0,mat,vis);
            }
            if(mat[i][m-1]=='O' and !vis[i][m-1]){
                dfs(i,m-1,mat,vis);
            }
        }
        for(int i=0;i<m;i++){
            if(mat[0][i]=='O' and !vis[0][i]){
                dfs(0,i,mat,vis);
            }
            if(mat[n-1][i]=='O' and !vis[n-1][i]){
                dfs(n-1,i,mat,vis);
            }
        }
        
        for(int i = 0; i < n; i++){
    for(int j = 0; j < m; j++){
        if(mat[i][j] == 'O' and !vis[i][j]) mat[i][j] = 'X';
    }
}

        return mat;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n, m;
        cin>>n>>m;
        vector<vector<char>> mat(n, vector<char>(m, '.'));
        for(int i = 0;i < n;i++)
            for(int j=0; j<m; j++)
                cin>>mat[i][j];
        
        Solution ob;
        vector<vector<char>> ans = ob.fill(n, m, mat);
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < m;j++) {
                cout<<ans[i][j]<<" ";
            }
            cout<<"\n";
        }
    }
    return 0;
}
// } Driver Code Ends
