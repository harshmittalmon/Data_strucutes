lass Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool bfs(int i,vector<int> & vis,vector<int>adj[]){
        vis[i]=1;
        queue<pair<int,int>> q;
        q.push({i,-1});
        while(!q.empty()){
            auto pr = q.front();q.pop();
            int curr = pr.first , parent = pr.second;
            for(auto & j : adj[curr]){
                if(!vis[j]){
                    vis[j]=1;
                    q.push({j,curr});
                }
                else if(parent!=j){
                    return true;
                }
                
            }
        }
        return false;
    }
    
    
    
    bool isCycle(int n, vector<int> adj[]) {
        // Code here
        vector<int> vis(n+1);
        for(int i=0;i<n;i++){
            if(!vis[i]){
                if(bfs(i,vis,adj))return true;
                
            }
        }
        return false;
    
    }
};
