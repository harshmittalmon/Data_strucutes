
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        long long  ans=0;
        queue<pair<TreeNode * , long long>> q;
        q.push({root,0});
        while(!q.empty()){
            long long  size = q.size();
            long long mini = q.front().second;
            long long first,last;
            for(int i=0;i<size;i++){
                TreeNode * temp = q.front().first;
                long long  curr_id = q.front().second-mini; 
                q.pop();                               
                if(i == 0)first =curr_id ;
                if(i==size-1)last = curr_id ;
                if(temp->left)q.push({temp->left,curr_id*2 +1});
                if(temp->right)q.push({temp->right,curr_id*2 +2});
            }
            ans = max(last-first+1,ans);
        }
        return ans;
        
    }
};
