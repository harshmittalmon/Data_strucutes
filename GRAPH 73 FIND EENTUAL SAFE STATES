class Solution {
public:
    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {
        int size = graph.size();vector<int> ans;
        vector<int> adj[size],indegree(size);queue<int>q;
        for(int v=0;v<size;v++){
            for(auto & j : graph[v]){
                adj[j].push_back(v);
                indegree[v]++;
            }
        }
        for(int i=0;i<size;i++){
            if(indegree[i]==0)q.push(i);
        }
        while(!q.empty()){
            int front = q.front();q.pop();ans.push_back(front);
            for(auto & i : adj[front]){
                indegree[i]--;
                if(indegree[i]==0)q.push(i);
            }
        }
        sort(ans.begin(),ans.end());
        return ans;
    }
};
